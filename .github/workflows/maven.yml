name: Java CI with Maven

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: 
      - '**'
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Tests
        id: get_coverage
        run: |
          COVERAGE=$(sed -nE 's/^.*<td>Total<([^>]+>){4}([^<]*).*$/\2/p' target/site/jacoco/index.html | sed -nE 's/[^0-9]*([0-9]+).*/\1/p')
          if [ $COVERAGE -lt 70 ]; then
            COLOR=red
          elif [ $COVERAGE -lt 90 ]; then
            COLOR=orange
          else
            COLOR=green
          fi
          echo "::set-output name=COVERAGE::$COVERAGE"
          echo "::set-output name=COLOR::$COLOR"
          
              
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 73adb891918b248bf5cd39afb416ee7c
          filename: test.json
          label: Coverage
          message: ${{ steps.get_coverage.outputs.COVERAGE }}%
          color: ${{ steps.get_coverage.outputs.COLOR }}
        
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
